
<lexer>
  <config>
    <name>liquid</name>
    <alias>liquid</alias>
    <filename>*.liquid</filename>
  </config>
  <rules>
    <state name="root">
      <rule pattern="[^{]+"><token type="Text"/></rule>
      <rule pattern="(\{%)(\s*)"><bygroups><token type="Punctuation"/><token type="TextWhitespace"/></bygroups><push state="tag-or-block"/></rule>
      <rule pattern="(\{\{)(\s*)([^\s}]+)"><bygroups><token type="Punctuation"/><token type="TextWhitespace"/><usingself state="generic"/></bygroups><push state="output"/></rule>
      <rule pattern="\{"><token type="Text"/></rule>
    </state>
    <state name="tag-or-block">
      <rule pattern="(if|unless|elsif|case)(?=\s+)"><token type="KeywordReserved"/><push state="condition"/></rule>
      <rule pattern="(when)(\s+)"><bygroups><token type="KeywordReserved"/><token type="TextWhitespace"/></bygroups><combined state="end-of-block" state="whitespace" state="generic"/></rule>
      <rule pattern="(else)(\s*)(%\})"><bygroups><token type="KeywordReserved"/><token type="TextWhitespace"/><token type="Punctuation"/></bygroups><pop depth="1"/></rule>
      <rule pattern="(capture)(\s+)([^\s%]+)(\s*)(%\})"><bygroups><token type="NameTag"/><token type="TextWhitespace"/><usingself state="variable"/><token type="TextWhitespace"/><token type="Punctuation"/></bygroups><pop depth="1"/></rule>
      <rule pattern="(comment)(\s*)(%\})"><bygroups><token type="NameTag"/><token type="TextWhitespace"/><token type="Punctuation"/></bygroups><push state="comment"/></rule>
      <rule pattern="(raw)(\s*)(%\})"><bygroups><token type="NameTag"/><token type="TextWhitespace"/><token type="Punctuation"/></bygroups><push state="raw"/></rule>
      <rule pattern="(end(case|unless|if))(\s*)(%\})"><bygroups><token type="KeywordReserved"/>None<token type="TextWhitespace"/><token type="Punctuation"/></bygroups><pop depth="1"/></rule>
      <rule pattern="(end([^\s%]+))(\s*)(%\})"><bygroups><token type="NameTag"/>None<token type="TextWhitespace"/><token type="Punctuation"/></bygroups><pop depth="1"/></rule>
      <rule pattern="(cycle)(\s+)(?:([^\s:]*)(:))?(\s*)"><bygroups><token type="NameTag"/><token type="TextWhitespace"/><usingself state="generic"/><token type="Punctuation"/><token type="TextWhitespace"/></bygroups><push state="variable-tag-markup"/></rule>
      <rule pattern="([^\s%]+)(\s*)"><bygroups><token type="NameTag"/><token type="TextWhitespace"/></bygroups><push state="tag-markup"/></rule>
    </state>
    <state name="output">
      <rule><include state="whitespace"/></rule>
      <rule pattern="\}\}"><token type="Punctuation"/><pop depth="1"/></rule>
      <rule pattern="\|"><token type="Punctuation"/><push state="filters"/></rule>
    </state>
    <state name="filters">
      <rule><include state="whitespace"/></rule>
      <rule pattern="\}\}"><token type="Punctuation"/><push state="#pop" state="#pop"/></rule>
      <rule pattern="([^\s|:]+)(:?)(\s*)"><bygroups><token type="NameFunction"/><token type="Punctuation"/><token type="TextWhitespace"/></bygroups><push state="filter-markup"/></rule>
    </state>
    <state name="filter-markup">
      <rule pattern="\|"><token type="Punctuation"/><pop depth="1"/></rule>
      <rule><include state="end-of-tag"/></rule>
      <rule><include state="default-param-markup"/></rule>
    </state>
    <state name="condition">
      <rule><include state="end-of-block"/></rule>
      <rule><include state="whitespace"/></rule>
      <rule pattern="([^\s=!&gt;&lt;]+)(\s*)([=!&gt;&lt;]=?)(\s*)(\S+)(\s*)(%\})"><bygroups><usingself state="generic"/><token type="TextWhitespace"/><token type="Operator"/><token type="TextWhitespace"/><usingself state="generic"/><token type="TextWhitespace"/><token type="Punctuation"/></bygroups></rule>
      <rule pattern="\b!"><token type="Operator"/></rule>
      <rule pattern="\bnot\b"><token type="OperatorWord"/></rule>
      <rule pattern="([\w.\&#x27;&quot;]+)(\s+)(contains)(\s+)([\w.\&#x27;&quot;]+)"><bygroups><usingself state="generic"/><token type="TextWhitespace"/><token type="OperatorWord"/><token type="TextWhitespace"/><usingself state="generic"/></bygroups></rule>
      <rule><include state="generic"/></rule>
      <rule><include state="whitespace"/></rule>
    </state>
    <state name="generic-value">
      <rule><include state="generic"/></rule>
      <rule><include state="end-at-whitespace"/></rule>
    </state>
    <state name="operator">
      <rule pattern="(\s*)((=|!|&gt;|&lt;)=?)(\s*)"><bygroups><token type="TextWhitespace"/><token type="Operator"/>None<token type="TextWhitespace"/></bygroups><pop depth="1"/></rule>
      <rule pattern="(\s*)(\bcontains\b)(\s*)"><bygroups><token type="TextWhitespace"/><token type="OperatorWord"/><token type="TextWhitespace"/></bygroups><pop depth="1"/></rule>
    </state>
    <state name="end-of-tag">
      <rule pattern="\}\}"><token type="Punctuation"/><pop depth="1"/></rule>
    </state>
    <state name="end-of-block">
      <rule pattern="%\}"><token type="Punctuation"/><push state="#pop" state="#pop"/></rule>
    </state>
    <state name="end-at-whitespace">
      <rule pattern="\s+"><token type="TextWhitespace"/><pop depth="1"/></rule>
    </state>
    <state name="param-markup">
      <rule><include state="whitespace"/></rule>
      <rule pattern="([^\s=:]+)(\s*)(=|:)"><bygroups><token type="NameAttribute"/><token type="TextWhitespace"/><token type="Operator"/></bygroups></rule>
      <rule pattern="(\{\{)(\s*)([^\s}])(\s*)(\}\})"><bygroups><token type="Punctuation"/><token type="TextWhitespace"/><usingself state="variable"/><token type="TextWhitespace"/><token type="Punctuation"/></bygroups></rule>
      <rule><include state="string"/></rule>
      <rule><include state="number"/></rule>
      <rule><include state="keyword"/></rule>
      <rule pattern=","><token type="Punctuation"/></rule>
    </state>
    <state name="default-param-markup">
      <rule><include state="param-markup"/></rule>
      <rule pattern="."><token type="Text"/></rule>
    </state>
    <state name="variable-param-markup">
      <rule><include state="param-markup"/></rule>
      <rule><include state="variable"/></rule>
      <rule pattern="."><token type="Text"/></rule>
    </state>
    <state name="tag-markup">
      <rule pattern="%\}"><token type="Punctuation"/><push state="#pop" state="#pop"/></rule>
      <rule><include state="default-param-markup"/></rule>
    </state>
    <state name="variable-tag-markup">
      <rule pattern="%\}"><token type="Punctuation"/><push state="#pop" state="#pop"/></rule>
      <rule><include state="variable-param-markup"/></rule>
    </state>
    <state name="keyword">
      <rule pattern="\b(false|true)\b"><token type="KeywordConstant"/></rule>
    </state>
    <state name="variable">
      <rule pattern="[a-zA-Z_]\w*"><token type="NameVariable"/></rule>
      <rule pattern="(?&lt;=\w)\.(?=\w)"><token type="Punctuation"/></rule>
    </state>
    <state name="string">
      <rule pattern="&#x27;[^&#x27;]*&#x27;"><token type="LiteralStringSingle"/></rule>
      <rule pattern="&quot;[^&quot;]*&quot;"><token type="LiteralStringDouble"/></rule>
    </state>
    <state name="number">
      <rule pattern="\d+\.\d+"><token type="LiteralNumberFloat"/></rule>
      <rule pattern="\d+"><token type="LiteralNumberInteger"/></rule>
    </state>
    <state name="generic">
      <rule><include state="keyword"/></rule>
      <rule><include state="string"/></rule>
      <rule><include state="number"/></rule>
      <rule><include state="variable"/></rule>
    </state>
    <state name="whitespace">
      <rule pattern="[ \t]+"><token type="TextWhitespace"/></rule>
    </state>
    <state name="comment">
      <rule pattern="(\{%)(\s*)(endcomment)(\s*)(%\})"><bygroups><token type="Punctuation"/><token type="TextWhitespace"/><token type="NameTag"/><token type="TextWhitespace"/><token type="Punctuation"/></bygroups><push state="#pop" state="#pop"/></rule>
      <rule pattern="."><token type="Comment"/></rule>
    </state>
    <state name="raw">
      <rule pattern="[^{]+"><token type="Text"/></rule>
      <rule pattern="(\{%)(\s*)(endraw)(\s*)(%\})"><bygroups><token type="Punctuation"/><token type="TextWhitespace"/><token type="NameTag"/><token type="TextWhitespace"/><token type="Punctuation"/></bygroups><pop depth="1"/></rule>
      <rule pattern="\{"><token type="Text"/></rule>
    </state>
  </rules>
</lexer>
